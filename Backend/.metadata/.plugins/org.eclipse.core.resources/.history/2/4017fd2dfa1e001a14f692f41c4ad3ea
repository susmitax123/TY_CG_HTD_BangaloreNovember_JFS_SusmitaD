package com.capgemini.jdbcproject.dao;

import java.io.FileReader;
import java.sql.Connection;
import java.sql.Driver;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.Properties;

import com.capgemini.jdbcproject.bean.Contractor;

public class ContractorDAOImpl implements ContractorDAO {

	FileReader reader;
	Properties prop;
	Contractor contractor;
	
	public ContractorDAOImpl() {
		try {
			reader = new FileReader("db.properties.txt");
			System.out.println(reader);
			prop = new Properties();
			prop.load(reader);
			System.out.println(prop.getProperty("driverClass"));
			Class.forName(prop.getProperty("driverClass"));
		}catch(Exception e) {
			e.printStackTrace();
		}
	}
	@Override
	public List<Contractor> getAllContarctor() {
		List<Contractor> list = new ArrayList<Contractor>();
		
		try(Connection conn = DriverManager.getConnection(prop.getProperty("dbUrl"),
				prop.getProperty("dbUser"),prop.getProperty("dbPassword"));
				Statement stmt = conn.createStatement();
				ResultSet rs = stmt.executeQuery(prop.getProperty("query"))
				){
			while(rs.next()) {
				contractor = new Contractor();
				contractor.setContractorNo(rs.getInt(1));
				contractor.setCustomerId(rs.getInt(2));
				contractor.setProductId(rs.getInt(3));
				contractor.setHaulierId(rs.getInt(4));
				contractor.setDeliveryDate(rs.getString(5));
				contractor.setDeliveryDay(rs.getString(6));
				contractor.setQunatity(rs.getString(7));
				list.add(contractor);
			}
			return list;
		}catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}

	@Override
	public boolean deletecontarctor(int cid) {
		try(Connection conn = DriverManager.getConnection(prop.getProperty("dbUrl"),
				prop.getProperty("dbUser"),prop.getProperty("dbPassword"));
				PreparedStatement pstmt = conn.prepareStatement(prop.getProperty("deleteQuery"))
						){
			pstmt.setInt(1, cid);
			int count = pstmt.executeUpdate();
			
			if(count > 0) {
				return true;
			}
		}catch (Exception e) {
			e.printStackTrace();
		}
		
		return false;
	}

	@Override
	public boolean addContarctor(Contractor contractor) {
		try(Connection conn = DriverManager.getConnection(prop.getProperty("dbUrl"),
				prop.getProperty("dbUser"),prop.getProperty("dbPassword"));
				PreparedStatement pstmt = conn.prepareStatement(prop.getProperty("insertQuery"))
						){
	pstmt.setInt(1, contractor.getContractorNo());
	pstmt.setInt(2, contractor.getCustomerId());
	pstmt.setInt(3, contractor.getProductId());
	pstmt.setInt(4, contractor.getHaulierId());
	pstmt.setString(5, contractor.getDeliveryDate());
	pstmt.setString(6, contractor.getDeliveryDay());
	pstmt.setString(7, contractor.getQunatity());
	System.out.println(pstmt);
	int count = pstmt.executeUpdate();
	
	if(count > 0) {
		return true;
	}
	}catch(Exception e) {
		e.printStackTrace();
	}
		return false;

}
}
